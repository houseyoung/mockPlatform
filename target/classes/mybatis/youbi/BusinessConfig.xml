<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="YouBiBusiConfig">
	<resultMap id="resultMap" type="com.mockCommon.model.web.BusinessConfig">
		<result property="id" column="id"></result>
		<result property="businessId" column="businessid"></result>
		<result property="wenAn" column="wenan"></result>
		<result property="baoE" column="baoe"></result>
		<result property="baoFei" column="baofei"></result>
		<result property="status" column="status"></result>
		<result property="businessCode" column="businesscode"></result>
	</resultMap>
	<resultMap id="resultIni" type="com.mockCommon.model.web.BusinessIni">
		<result property="iniName" column="ini_name"></result>
		<result property="iniValue" column="ini_value"></result>
		<result property="iniDesc" column="ini_desc"></result>
	</resultMap>
	<insert id="insert" parameterType="com.mockCommon.model.web.BusinessConfig">
		insert into insr_business_config(id, businessid, wenan, baoe, 
					baofei, status, businesscode)
			values(
				#{id, jdbcType=VARCHAR},
				#{businessId, jdbcType=VARCHAR},
				#{wenAn, jdbcType=VARCHAR},
				#{baoE, jdbcType=DECIMAL},
				#{baoFei, jdbcType=DECIMAL},
				#{status, jdbcType=DECIMAL},
				#{businessCode, jdbcType=VARCHAR}
			)
	</insert>
	<insert id="batchInsertIni" parameterType="java.util.List">
		insert into INSR_BUSI_INI(ini_name, ini_value)
		<foreach collection="list" item="ini" index="index" separator="union all">
			select #{ini.iniName}, #{ini.iniValue} from dual
		</foreach>
	</insert>
	<insert id="insertIni" parameterType="com.mockCommon.model.web.BusinessIni">
		insert into INSR_BUSI_INI(ini_name, ini_value, ini_desc)
		values(#{iniName, jdbcType=VARCHAR},
			   #{iniValue, jdbcType=VARCHAR},
			   #{iniDesc, jdbcType=VARCHAR})
	</insert>
	<update id="batchUpdateIni" parameterType="java.util.List">
		<foreach collection="list" item="ini" index="index" open="begin" close="; end;" separator=";">
			update INSR_BUSI_INI 
			<set>
				ini_value = #{ini.iniValue, jdbcType=VARCHAR}
			</set>
			where ini_name = #{ini.iniName, jdbcType=VARCHAR}
		</foreach>
	</update>
	<update id="updateIni" parameterType="com.mockCommon.model.web.BusinessIni">
			update INSR_BUSI_INI 
			<set>
				<if test="iniValue!=null">
				ini_value = #{iniValue, jdbcType=VARCHAR},
				</if>
				<if test="iniDesc!=null">
				ini_desc = #{iniDesc, jdbcType=VARCHAR},
				</if>
			</set>
			where ini_name = #{iniName, jdbcType=VARCHAR}
	</update>
	
	<update id="updateIniLike" parameterType="com.mockCommon.model.web.BusinessIni">
			update INSR_BUSI_INI set ini_value = #{iniValue, jdbcType=VARCHAR} where ini_name like #{iniName, jdbcType=VARCHAR}
	</update>

	
	<update id="mergeIni" parameterType="com.mockCommon.model.web.BusinessIni">
		merge into INSR_BUSI_INI t
		using (select #{iniName} as iniName from dual) t1
		on(t.ini_name = t1.iniName)
		when not matched then
		insert values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="iniName!=null and iniName!=''">
				#{iniName, jdbcType=VARCHAR},
			</if>
			<if test="iniValue!=null and iniValue!=''">
				#{iniValue, jdbcType=VARCHAR},
			</if>
			<if test="iniDesc!=null and iniDesc!=''">
				#{iniDesc, jdbcType=VARCHAR},
			</if>
		</trim>
		when matched then 
		update
		<set>
			<if test="iniValue!=null and iniValue!=''">
				ini_value = #{iniValue, jdbcType=VARCHAR},
			</if>
			<if test="iniDesc!=null and iniDesc!=''">
				ini_desc = #{iniDesc, jdbcType=VARCHAR},
			</if>
		</set>
		where ini_name = #{iniName, jdbcType=VARCHAR}
	</update>
	<update id="updateConfig" parameterType="com.mockCommon.model.web.BusinessConfig">
		update insr_business_config
		<set>
			<if test="wenAn!=null and wenAn!=''">
				wenan = #{wenAn},
			</if>
			<if test="baoE!=null and baoE!=''">
				baoe = #{baoE},
			</if>
			<if test="baoFei!=null and baoFei!=''">
				baofei = #{baoFei},
			</if>
			<if test="status!=null and status!=''">
				status = #{status},
			</if>
		</set>
			where id = #{id}
	</update>
	<select id="queryIni" parameterType="com.mockCommon.model.web.BusinessIni" resultMap="resultIni">
		select * from INSR_BUSI_INI where ini_name = #{iniName}
	</select>
	
	<select id="queryConfigList" parameterType="Map" resultMap="resultMap">
		select t.* from insr_business_config t, insr_business_dict t1
		where t.businessid = t1.id
			and t.status = '1'
			<if test="businessCode!=null and businessCode!=''">
				and t1.business_code = #{businessCode}
			</if>
			<if test="baoE!=null and baoE!=''">
				and t.baoe = #{baoE}
			</if>
			order by t.id
	</select>
	
	<select id="queryAllIni" resultMap="resultIni">
		select * from INSR_BUSI_INI
	</select>
</mapper>